{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","e","preventDefault","storeName","current","value","console","log","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","createFish","parseFloat","desc","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","updateFish","index","onChange","image","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeId","context","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","removeBinding","setItem","stringify","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","getElementById"],"mappings":"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","file":"static/js/main.67e2baba.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getFunName } from '../helpers';\n\nclass StorePicker extends React.Component {\n  static propTypes = {\n    history: PropTypes.object,\n  }\n\n  myInput = React.createRef();\n\n  goToStore = e => {\n    // 1. Stop the form from submitting\n    e.preventDefault();\n    // 2. Get the text from that input\n    const storeName = this.myInput.current.value;\n    console.log(storeName);\n    // 3. Change the page to /store/whatever-they-entered\n    this.props.history.push(`/store/${storeName}`);\n  };\n\n  render() {\n    return (\n        <form className='store-selector' onSubmit={this.goToStore}>\n          <h2>Please Enter a Store</h2>\n          <input\n          type='text'\n          ref={this.myInput}\n          required\n          placeholder='Store Name'\n          defaultValue={getFunName()} />\n          <button type='submit'>Visit Store</button>\n        </form>\n    );\n  }\n}\n\nexport default StorePicker;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = (props)  => (\n    <header className='top'>\n        <h1>\n          Catch\n          <span className='ofThe'>\n            <span className='of'>Of</span>\n            <span className='the'>The</span>\n          </span>\n          Day\n        </h1>\n        <h3 className='tagline'>\n            <span>{props.tagline}</span>\n        </h3>\n      </header>\n  );\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired,\n}\n\nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\nimport { transitionGroup, CSSTransition, TransitionGroup } from 'react-transition-group';\nimport Property from 'cesium/Source/DataSources/Property';\n\n\nclass Order extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    order: PropTypes.object,\n    removeFromOrder: PropTypes.func,\n  }\n\n  renderOrder = (key) => {\n    const fish = this.props.fishes[key];\n    const count = this.props.order[key];\n    const isAvailable = fish && fish.status === 'available';\n    const transitionOptions = {\n      classNames: 'order',\n      key,\n      timeout: { enter: 500, exit: 500, },\n    }\n        // Make sure the fish is loaded before we continue\n    if (!fish) return null;\n    if (!isAvailable) {\n      return (\n        <CSSTransition {...transitionOptions}>\n          <li key={key}>\n            Sorry {fish ? fish.name : 'fish'} is no longer available\n          </li>\n        </CSSTransition>\n      );\n    }\n      return (\n        <CSSTransition {...transitionOptions}>\n          <li key={key}>\n            <span>\n              <TransitionGroup component='span' className='count'>\n                <CSSTransition classNames='count' key={count} timeout={{ enter: 500, exit: 500 }} >\n                  <span>{count}</span>\n                </CSSTransition>\n              </TransitionGroup>\n              lbs {fish.name}\n\n              {formatPrice(count * fish.price)}\n              <button onClick={() => this.props.removeFromOrder(key)} >&times;</button>\n            </span>\n          </li>\n        </CSSTransition>\n      );\n  };\n\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const fish = this.props.fishes[key];\n      const count = this.props.order[key];\n      const isAvailable = fish && fish.status === 'available';\n      if (isAvailable) {\n        return prevTotal + (count * fish.price);\n      }\n        return prevTotal;\n    }, 0);\n\n    return (\n      <div className='Order-wrap'>\n        <h2>Order</h2>\n        <TransitionGroup component='ul' className='order'>\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n        <div className='total'>\n          Total:\n          <strong>{formatPrice(total)}</strong>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Order;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddFishForm extends React.Component {\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n\n  static propTypes = {\n    addFish: PropTypes.func,\n  };\n\n  createFish = e => {\n    // 1. Stop the form from submitting\n    e.preventDefault();\n    const fish = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value),\n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n    }\n    this.props.addFish(fish);\n    // 2. Refresh the form\n    e.currentTarget.reset();\n  };\n\n  render() {\n    return (\n      <form className='fish-edit' onSubmit={this.createFish}>\n        <input name ='name' ref={this.nameRef} type='text' placeholder='Name' />\n        <input name ='price' ref={this.priceRef} type='text' placeholder='Price' />\n        <select name ='status' ref={this.statusRef} >\n          <option value='available'>Fresh!</option>\n          <option value='unavailable'>Sold Out!</option>\n        </select>\n\n        <textarea name ='desc' ref={this.descRef} placeholder='Desc' />\n        <input name ='image' type='text' placeholder='Image' />\n        <button type='submit'>+ Add Fish</button>\n      </form>\n    );\n  }\n}\n\nexport default AddFishForm;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass EditFishForm extends React.Component {\n  static propTypes ={\n    fish: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      status: PropTypes.string,\n      desc: PropTypes.string,\n      price: PropTypes.number,\n    }),\n    index: PropTypes.string,\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func,\n  };\n\n  handleChange = (e) => {\n    // Update that fish\n    // 1. Take a copy of current fish\n    const updatedFish = {\n      ...this.props.fish,\n      [e.currentTarget.name]: e.currentTarget.value,\n    };\n\n    this.props.updateFish(this.props.index, updatedFish);\n  };\n\n  render() {\n    return <div className='fish-edit'>\n      <input type='text' name='name' onChange={this.handleChange} value={this.props.fish.name} />\n      <input type='text' name='price' onChange={this.handleChange} value={this.props.fish.price} />\n      <select type='text' name='status' onChange={this.handleChange} value={this.props.fish.status} >\n        <option onChange={this.handleChange} value='available'>Fresh!</option>\n        <option onChange={this.handleChange} value='unavailable'>Sold Out!</option>\n      </select>\n      <textarea type='text' name='desc' onChange={this.handleChange} value={this.props.fish.desc} />\n      <input type='text' name='image' onChange={this.handleChange} value={this.props.fish.image} />\n      <button onClick={() => this.props.deleteFish(this.props.index)} >Remove Fish</button>\n    </div>;\n  }\n}\n\nexport default EditFishForm;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Login = (props) => (\n  <nav className='login'>\n    <h2>Inventory Login</h2>\n    <p>Sign in to manage your store's inventory.</p>\n    <button className='github' onClick={() => props.authenticate('Github')}>Log In With Github</button>\n    <button className='facebook' onClick={() => props.authenticate('Facebook')}>Log In With Facebook</button>\n  </nav>\n);\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired,\n};\n\nexport default Login;","import Rebase from 're-base';\nimport firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyAnerbNFp7StWdiYjHNFfQU3UOutkDSfPo\",\n  authDomain: \"catch-of-the-day-jacob-kubik.firebaseapp.com\",\n  databaseURL: \"https://catch-of-the-day-jacob-kubik-default-rtdb.firebaseio.com\",\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// This is a named export\nexport { firebaseApp };\n\n// This is a default export\nexport default base;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport firebase from 'firebase';\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport Login from './Login';\nimport base, { firebaseApp } from '../base';\n\nclass Inventory extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    deleteFish: PropTypes.func,\n    updateFish: PropTypes.func,\n    addFish: PropTypes.func,\n    loadSampleFishes: PropTypes.func,\n  };\n\n  state = {\n    uid: null,\n    owner: null,\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.authHandler({ user });\n      }\n    })\n  }\n\n  authHandler = async (authData) => {\n    // 1. Look up the current store in the firebase database\n    const store = await base.fetch(this.props.storeId, { context: this });\n    // 2. Claim it if there is no owner\n    if (!store.owner) {\n      // save it as our own\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid,\n      });\n    }\n    // 3. set the state of the inventory component to reflect the current user\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid,\n    });\n  }\n\n  authenticate = (provider) => {\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    firebaseApp\n      .auth()\n      .signInWithPopup(authProvider)\n      .then(this.authHandler);\n  };\n\n  logout = async () => {\n    console.log('logging out!');\n    await firebase.auth().signOut();\n    this.setState({ uid: null });\n  }\n\n  render() {\n    const logout = <button onClick={this.logout}>Logout</button>\n\n    // 1. Check if they are logged in\n    if (!this.state.uid) {\n      return <Login authenticate={this.authenticate}/>;\n    }\n\n    // 2. Check if they are not the owner of the store\n    if (this.state.uid !== this.state.owner) {\n      return (\n        <div>\n          <p>Sorry, you are not the owner</p>\n          {logout}\n        </div>\n      );\n    }\n\n    // 3. They must be the owner, just render the inventory\n    return (\n      <div className=\"inventory\">\n        <h2>Inventory</h2>\n        {logout}\n        {Object.keys(this.props.fishes).map(key => (\n          <EditFishForm\n            key={key}\n            index={key}\n            fish={this.props.fishes[key]}\n            updateFish={this.props.updateFish}\n            deleteFish={this.props.deleteFish}\n          />\n        ))}\n        <AddFishForm addFish={this.props.addFish} />\n        <button onClick={this.props.loadSampleFishes}>\n          Load Sample Fishes\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Inventory;","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\n\nclass Fish extends React.Component {\n  static propTypes = {\n    details: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      status: PropTypes.string,\n      desc: PropTypes.string,\n      price: PropTypes.number,\n    }),\n    addToOrder: PropTypes.func,\n  };\n\n  render() {\n    const { image, name, price, desc, status, index } = this.props.details;\n    const isAvailable = status === 'available';\n\n    return (\n      <li className='menu-fish'>\n        <img src={image} alt={name} />\n        <h3 className ='fish-name'>\n          {name}\n          <span className='price'>{formatPrice(price)}</span>\n        </h3>\n        <p>{desc}</p>\n        <button disabled={!isAvailable} onClick={() => this.props.addToOrder(this.props.index)}>{isAvailable ? 'Add To Cart' : 'Sold Out!'}</button>\n      </li>\n    );\n  }\n}\n\nexport default Fish;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport sampleFishes from '../sample-fishes';\nimport Fish from './Fish';\nimport base from '../base';\n\nclass App extends React.Component {\n  state = {\n    fishes: {},\n    order: {},\n  };\n\n  static propTypes = {\n    match: PropTypes.object,\n  };\n\n  componentDidMount() {\n    const { params } = this.props.match;\n    // First reinstate our localstorage\n    const localStorageRef = localStorage.getItem(params.storeId);\n    if (localStorageRef) {\n      this.setState({ order: JSON.parse(localStorageRef) });\n    }\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state: 'fishes',\n    });\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\n  }\n\n  addFish = fish => {\n    // 1. Take a copy of the existing state\n    const fishes = {...this.state.fishes};\n    // 2. Add our our new fish to that fishes variable\n    fishes[`fish${Date.now()}`] = fish;\n    // 3. Set the new fishes object to state\n    this.setState({ fishes, });\n  };\n\n  updateFish = (key, updatedFish) => {\n    // 1. Take a copy of the current state\n    const fishes = {...this.state.fishes};\n    // 2. Update that state\n    fishes[key] = updatedFish;\n    // 3. Set that to state\n    this.setState({ fishes });\n  }\n\n  deleteFish = (key) => {\n    // 1. Take a copy of state\n    const fishes = {...this.state.fishes};\n    // 2. Update the state\n    fishes[key] = null;\n    // 3. Update state\n    this.setState({ fishes });\n  }\n\n  loadSampleFishes = () => {\n    this.setState({\n      fishes: sampleFishes,\n    });\n  };\n\n  addToOrder = (key) => {\n    // 1. Take a copy of state\n    const order = {...this.state.order};\n    // 2. Either add or update the number in our order\n    order[key] = order[key] + 1 || 1;\n    // 3. Call setState to update our state object\n    this.setState({ order });\n  };\n\n  removeFromOrder = (key) => {\n    // 1. Take a copy of state\n    const order = {...this.state.order};\n    // 2. Remove the fish from the order\n    delete order[key];\n    // 3. Update order\n    this.setState({ order });\n  }\n\n  render() {\n    return (\n      <div className='catch-of-the-day'>\n        <div className='menu'>\n          <Header tagline='Fresh Seafood Market' />\n          <ul className='fishes'>\n            {Object.keys(this.state.fishes).map(key =>\n            <Fish\n              key={key}\n              index={key}\n              details={this.state.fishes[key]}\n              addToOrder={this.addToOrder}\n            />)}\n          </ul>\n        </div>\n        <Order\n          fishes={this.state.fishes}\n          order={this.state.order}\n          removeFromOrder={this.removeFromOrder}\n        />\n        <Inventory\n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          deleteFish={this.deleteFish}\n          loadSampleFishes={this.loadSampleFishes}\n          fishes={this.state.fishes}\n          storeId={this.props.match.params.storeId}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\n\nconst NotFound = () => (\n  <div>\n    <h2>Not Found!!?</h2>\n  </div>\n);\n\nexport default NotFound;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport StorePicker from './StorePicker';\nimport App from './App';\nimport NotFound from './NotFound';\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path='/' component={StorePicker} />\n      <Route path='/store/:storeId' component={App} />\n      <Route  component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\n\nexport default Router;","import React from 'react';\nimport { render } from 'react-dom';\nimport Router from './components/Router';\nimport './css/style.css';\n\nrender(<Router />, document.getElementById('main'));"],"sourceRoot":""}